package works.ss.dynamic.pwa.frontend.crud;

import com.vaadin.flow.component.*;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.formlayout.FormLayout;
import com.vaadin.flow.component.orderedlayout.FlexComponent;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.dom.Element;
import org.vaadin.crudui.crud.CrudOperation;
import org.vaadin.crudui.form.AbstractAutoGeneratedCrudFormFactory;

import java.util.List;

public class CustomCrudFormFactory<T> extends AbstractAutoGeneratedCrudFormFactory<T> {
    private FormLayout.ResponsiveStep[] responsiveSteps;

    public CustomCrudFormFactory(Class<T> domainType) {
        this(domainType, (FormLayout.ResponsiveStep[])null);
    }

    public CustomCrudFormFactory(Class<T> domainType, FormLayout.ResponsiveStep... responsiveSteps) {
        super(domainType);
        if (responsiveSteps != null) {
            this.responsiveSteps = responsiveSteps;
        } else {
            this.responsiveSteps = new FormLayout.ResponsiveStep[]{new FormLayout.ResponsiveStep("0em", 1), new FormLayout.ResponsiveStep("25em", 2)};
        }

    }



    @Override
    public Component buildNewForm(CrudOperation operation, T domainObject, boolean readOnly, ComponentEventListener<ClickEvent<Button>> cancelButtonClickListener, ComponentEventListener<ClickEvent<Button>> operationButtonClickListener) {
        FormLayout formLayout = new FormLayout();
        formLayout.setSizeFull();
        formLayout.setResponsiveSteps(this.responsiveSteps);
        List<HasValueAndElement> fields = this.buildFields(operation, domainObject, readOnly);
        fields.stream().forEach((field) -> {
            Element var10000 = (Element)formLayout.getElement().appendChild(new Element[]{field.getElement()});
        });
        Component footerLayout = this.buildFooter(operation, domainObject, cancelButtonClickListener, operationButtonClickListener);
        VerticalLayout mainLayout = new VerticalLayout(new Component[]{formLayout, footerLayout});
        mainLayout.setFlexGrow(1.0D, new HasElement[]{formLayout});
        mainLayout.setHorizontalComponentAlignment(FlexComponent.Alignment.END, new Component[]{footerLayout});
        mainLayout.setMargin(false);
        mainLayout.setPadding(false);
        mainLayout.setSpacing(false);
        return mainLayout;
    }

    @Override
    public String buildCaption(CrudOperation crudOperation, T t) {
        return null;
    }



}
